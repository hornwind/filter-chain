name: Goreleaser

on:
  pull_request:
    branches:
      - main
    types:
      - closed
  push:
    tags: ["v*"]

jobs:
  tagger:
    runs-on: ubuntu-latest
    permissions:
      contents: write # to create new tag
    steps:
      - name: Create tag
        id: create
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request' && github.event.pull_request.merged && startsWith(github.event.pull_request.head.ref, 'release/')
        with:
          github-token: ${{ github.token }}
          script: |
            const tag = context.payload.pull_request.head.ref.replace("release/", "v")
            try {
              await github.rest.git.deleteRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: "refs/tags/" + tag,
              })
            } catch {
            }
            await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/" + tag,
              sha: context.payload.pull_request.merge_commit_sha,
            })
            return tag
          result-encoding: string

      - name: Get pushed tag
        id: push
        if: github.event_name == 'push'
        run: echo "result=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT

      - name: combine tags
        id: combined
        run: echo "tag=${PUSHED_TAG}${CREATED_TAG}" >> $GITHUB_OUTPUT
        env:
          CREATED_TAG: ${{ steps.create.outputs.result }}
          PUSHED_TAG: ${{ steps.push.outputs.result }}
    outputs:
      tag: ${{ steps.combined.outputs.tag }}

  generate-changelog:
    runs-on: ubuntu-latest
    permissions:
      contents: write # to commit merged changelog
      pull-requests: write # to create PR
    needs:
      - tagger
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: main

      - uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download changie
        run: go install github.com/miniscruff/changie@v1

      - name: Generate release changelog
        run: changie batch $TAG
        env:
          TAG: ${{ needs.tagger.outputs.tag }}

      - name: Upload changelog artifact
        uses: actions/upload-artifact@v3
        with:
          name: changelog
          path: .changes/${{ needs.tagger.outputs.tag }}.md

      - name: Merge changelog
        run: changie merge

      - name: Create Pull Request for changelog
        uses: peter-evans/create-pull-request@v4
        with:
          add-paths: |
            CHANGELOG.md
            .changes
          commit-message: "chore: update changelog [skip actions]"
          committer: GitHub <noreply@github.com>
          author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
          branch: "${{ needs.tagger.outputs.tag }}-changelog"
          delete-branch: true
          title: "chore: update changelog"

  goreleaser:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      packages: write
    needs:
      - tagger
      - generate-changelog
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ needs.tagger.outputs.tag }}

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2

      - uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download changelog artifact
        uses: actions/download-artifact@v3
        with:
          name: changelog

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v3
        with:
          version: latest
          args: release --skip-validate --rm-dist --release-notes ${{ needs.tagger.outputs.tag }}.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
